import{S as t,r as e,$ as a,s as r}from"./93f4a05a.js";
/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */class i extends t{static get tag(){return"date-card"}static get properties(){return{...super.properties,month:{type:String},date:{type:String},day:{type:String},title:{type:String},startTime:{type:String,attribute:"start-time"},endTime:{type:String,attribute:"end-time"},location:{type:String},borderSpacing:{type:Number,attribute:"border-spacing"}}}static get haxProperties(){return{canScale:!1,canPosition:!0,canEditSource:!0,gizmo:{title:"Date card",description:"Displays a calendar date with details",icon:"hax:calendar",color:"green",groups:["Date"],handles:[],meta:{author:"McGarvelcuddy",owner:"elmsln"}},settings:{configure:[{property:"month",title:"Month",description:"Month to display on card",inputMethod:"textfield"},{property:"date",title:"Day of month",description:"Numeric date of the month",inputMethod:"number"},{property:"day",title:"Day of week",description:"Textual day of the week",inputMethod:"textfield"},{property:"title",title:"Title",description:"Name of the event",inputMethod:"textfield"},{property:"location",title:"Location",description:"Where it is taking place",inputMethod:"textfield"},{property:"startTime",title:"Start",description:"Start time",inputMethod:"textfield"},{property:"endTime",title:"End",description:"Start time",inputMethod:"textfield"},{property:"accentColor",title:"Accent Color",description:"An optional accent color.",inputMethod:"colorpicker"},{property:"dark",title:"Dark Theme",description:"Enable Dark Theme",inputMethod:"boolean"}],advanced:[]},saveOptions:{unsetAttributes:["colors"]}}}constructor(){super(),this.borderSpacing=5,this.accentColor="light-blue"}nth(t){if(!t)return"";if(t>3&&t<21)return"th";switch(t%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}}static get styles(){return[...super.styles,e`:host{display:inline-flex}.card{box-shadow:0 4px 8px 0 rgba(0,0,0,.2);width:var(--date-card-card-width,100px);border-radius:10px}.card:hover{box-shadow:0 8px 16px 0 rgba(0,0,0,.2);border-radius:10px}.dateNumber,.dayName,.month{text-align:center;vertical-align:middle;font-family:roboto;line-height:16px;margin-bottom:8px;margin-top:15px;margin-bottom:15px}.month{color:var(--simple-colors-default-theme-accent-12);font-weight:400;font-size:1em;text-transform:uppercase}.dateNumber{font-size:20px}.dayName{text-transform:uppercase}.monthSection{background-color:var(--simple-colors-default-theme-accent-5);border:1px solid var(--simple-colors-default-theme-accent-1);border-radius:10px 10px 0 0}.details{border:2px solid var(--simple-colors-default-theme-accent-5);padding:4px 16px;background-color:var(--simple-colors-default-theme-accent-1)}.location,.time,.title{vertical-align:middle;font-family:roboto;line-height:16px;margin-bottom:8px}.title{font-size:20px;color:var(--simple-colors-default-theme-accent-11)}.time{font-size:16px;color:var(--simple-colors-default-theme-accent-10)}.location{font-size:16px;color:var(--simple-colors-default-theme-accent-10)}`]}render(){return a` <div class="card" style="margin:${this.borderSpacing}px"> <div class="monthSection"> <p class="month"><b>${this.month}</b></p> </div> <div class="dateSection"> <p class="dateNumber"> ${this.date}<sup>${this.nth(this.date)}</sup> </p> ${this.day?a` <p class="dayName">${this.day}</p> `:a``} </div> </div> ${this.title?a` <span class="details" .style="margin:${this.borderSpacing}px;"> <p class="title">${this.title}</p> <p class="time"> ${this.day?a` ${this.day}, `:a``}${this.month} ${this.date}${this.nth(this.date)} ${this.startTime?a` ${this.endTime?a` from ${this.startTime} - ${this.endTime} `:a` at ${this.startTime} `} `:a``} </p> ${this.location?a` <p class="location">${this.location}</p> `:a``} </span> `:a``} `}}customElements.define(i.tag,i);customElements.define("course-dates",class extends r{constructor(){super(),this.dates=[],this.loadData=!1,this.view="card"}static get properties(){return{view:{type:String,reflect:!0},dates:{type:Array},loadData:{type:Boolean,reflect:!0,attribute:"load-data"}}}updated(t){t.forEach(((t,e)=>{"loadData"===e&&this[e]?this.getData():"dates"===e&&this.dispatchEvent(new CustomEvent("results-changed",{detail:{value:this.dates}}))}))}getData(){const t=new URL(new URL("e5abc45b.json",import.meta.url).href,import.meta.url).href;fetch(t).then((t=>t.json())).then((t=>{this.dates=[];for(let e=0;e<t.length;e++){const a={name:t[e].details,location:t[e].location,start:t[e].start_time,end:t[e].end_time,order:t[e].order},r=new Date(a.start.split("T")[0]);a.month=new Intl.DateTimeFormat(document.lang,{month:"short"}).format(r),a.day=new Intl.DateTimeFormat(document.lang,{weekday:"short"}).format(r),a.date=r.getDate(),a.start=a.start.split("T")[1].replace("-5:00",""),a.end=a.end.split("T")[1].replace("-5:00",""),console.log(a),this.dates.push(a)}setTimeout((()=>{this.loadData=!1}),1e3)}))}resetData(){this.dates=[],this.loadData=!1}static get styles(){return e`:host{display:block;border:2px solid #000;min-height:100px}date-card{display:inline-flex}:host([view=list]) ul{margin:20px}`}render(){return a` ${"list"===this.view?a` <ul> ${this.dates.map((t=>a` <li> ${t.location} - ${t.month} - ${t.day} ${t.date} - ${t.name} - ${t.start} - ${t.end} </li> `))} </ul> `:a` ${this.dates.map((t=>a` <date-card location="${t.location}" month="${t.month}" day="${t.day}" date="${t.date}" title="${t.name}" start-time="${t.start}" end-time="${t.end}"></date-card> `))} `} `}}),document.querySelector("#load").addEventListener("click",(t=>{document.querySelector("#dates1").loadData=!0,document.querySelector("#dates2").loadData=!0})),document.querySelector("#reset").addEventListener("click",(t=>{document.querySelector("#dates1").resetData(),document.querySelector("#dates2").resetData()})),document.querySelector("course-dates").addEventListener("results-changed",(t=>{console.log(t.detail),document.querySelector("#select").innerHTML=t.detail.value.length}));
